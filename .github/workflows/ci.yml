name: CI Biblioteca Poli

on:
  push:
    branches: [development, 'feature/**']   # ðŸ‘ˆ quita main para forzar protecciÃ³n
  pull_request:
    branches: [development]

jobs:
  ########################################################################
  # 1) BUILD + TEST
  ########################################################################
  build-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: pip install -r app/requirements.txt

      - name: Run unit tests
        run: |
          set -o pipefail
          PYTHONPATH=$PWD/app python -m unittest discover -s app/test -v | tee resultados_test.log

      - name: Upload test log
        uses: actions/upload-artifact@v4
        with:
          name: resultados_test
          path: resultados_test.log


  ########################################################################
  # 2) NOTIFICACIÃ“N  (siempre)
  ########################################################################
  notify:
    needs: build-test
    runs-on: ubuntu-latest
    if: always()
    steps:
      - uses: 8398a7/action-slack@v3
        with: {status: ${{ needs.build-test.result }}}
        env: {SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}}

  ########################################################################
  # 3) MERGE feature/* â†’ development (sÃ³lo si tests OK)
  ########################################################################
  auto-merge-to-development:
    needs: build-test
    runs-on: ubuntu-latest
    if: ${{ needs.build-test.result == 'success' && startsWith(github.ref, 'refs/heads/feature/') }}
    steps:
      - name: Merge feature â†’ development
        run: |
          git config --global user.email "ci@github.com"
          git config --global user.name  "GitHub Action Bot"
          git clone https://x-access-token:${{ secrets.GH_PAT }}@github.com/${{ github.repository }} repo
          cd repo
          SRC="${GITHUB_REF#refs/heads/}"
          git fetch origin
          git checkout development
          git merge --no-ff origin/$SRC -m "Merge automÃ¡tico $SRC â†’ development"
          git push origin development

  ########################################################################
  # 4) MERGE development â†’ main
  #    a) Si el push original fue a development
  #    b) O si vino de feature/* y el paso anterior lo fusionÃ³
  ########################################################################
  auto-merge-to-main:
    needs: [build-test, auto-merge-to-development]   # â¬… orden garantizado
    runs-on: ubuntu-latest
    if: ${{ needs.build-test.result == 'success' &&
      ( github.ref == 'refs/heads/development' ||
      startsWith(github.ref, 'refs/heads/feature/') ) }}
    steps:
      - name: Merge development â†’ main
        run: |
          git config --global user.email "ci@github.com"
          git config --global user.name  "GitHub Action Bot"
          git clone https://x-access-token:${{ secrets.GH_PAT }}@github.com/${{ github.repository }} repo
          cd repo
          git fetch origin
          git checkout main
          git merge --no-ff origin/development -m "Merge automÃ¡tico development â†’ main [CI]"
          git push origin main
